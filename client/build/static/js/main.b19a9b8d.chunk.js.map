{"version":3,"sources":["redux/features/application.js","components/Header/Header.jsx","components/pages/SigninPage.jsx","components/pages/SignupPage.jsx","redux/features/memes.js","components/pages/preloader/Pending.jsx","components/pages/main/memes/Memes.jsx","components/pages/main/navbar/Sort.jsx","components/pages/main/navbar/CreateMeme.jsx","components/pages/main/navbar/TopNavbar.jsx","components/pages/main/MainPage.jsx","components/pages/Account.jsx","redux/features/templates.js","components/pages/create-meme/Templates.jsx","components/pages/create-meme/Canvas.jsx","components/pages/create-meme/Create.jsx","components/pages/create-meme/CreateMemePage.jsx","redux/features/comments.js","components/pages/SingleMemePage.jsx","components/pages/RandomMemePage.jsx","components/App.jsx","redux/configureStore.js","index.jsx"],"names":["initialState","id","localStorage","getItem","user","signinUp","signinIn","error","token","useStyles","makeStyles","theme","header","display","justifyContent","alignItems","height","backgroundColor","padding","logoHeader","width","profile","profileLogo","fontSize","profileLogoLink","color","escBtn","Header","classes","dispatch","useDispatch","useSelector","state","application","AppBar","position","Box","className","Button","component","Link","to","src","alt","variant","onClick","a","type","clear","paper","marginTop","spacing","flexDirection","avatar","margin","palette","secondary","main","form","submit","textAlign","SigninPage","history","useHistory","useState","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","fetch","method","body","JSON","stringify","headers","response","json","console","log","payload","setItem","auth","push","Container","maxWidth","CssBaseline","Avatar","Typography","onSubmit","noValidate","Grid","container","item","xs","TextField","required","fullWidth","value","label","name","autoComplete","onChange","target","disabled","SignupPage","props","setName","setAvatar","createUser","memes","loading","getMemes","sort","currentPage","url","toString","rndMeme","Pending","style","CircularProgress","pages","page","border","borderWidth","borderColor","borderRadius","paddingTop","paddingBottom","marginRight","marginLeft","cursor","like","countLikes","likedIcon","notLikedIcon","imageMem","lineHeight","imageCardMeme","left","top","bottom","right","Memes","useEffect","userId","search","setSearch","alert","setAlert","handleLike","idMeme","Authorization","res","status","likeMeme","data","filter","tags","length","i","toLowerCase","includes","sx","flexGrow","map","Card","cardMeme","CardMedia","img","image","CardActions","_id","endIcon","saveAs","startIcon","likes","find","Stack","Alert","action","IconButton","size","severity","Sort","setSort","FormControl","m","minWidth","InputLabel","Select","labelId","MenuItem","CreateMeme","buttonsBox","TopNavbar","MainPage","paddingLeft","inp","delBtn","fontFamily","title","letterSpacing","fontWeight","marginBottom","btnCont","Account","useParams","getUser","getMemesByAuthor","handlerChange","file","files","formData","FormData","append","uploadAvatar","for","accept","placeholder","items","template","Templates","templates","sm","md","lg","Paper","CardContent","selectTemplate","templateWrapper","background","canvas","boxShadow","tools","toolsHeader","toolsFooter","white","black","addTextBox","Canvas","instance","useRef","ImageEditor","require","current","document","querySelector","cssMaxWidth","cssMaxHeight","selectionStyle","cornerSize","rotatingPointOffset","startDrawingMode","loadImageFromURL","then","result","oldWidth","oldHeight","newWidth","newHeight","handleAddText","on","originPosition","addText","styles","fill","fontStyle","stroke","toDataURL","addMeme","Create","templatesBox","CreateMemePage","align","gutterBottom","comments","SingleMemePage","comment","setComment","findComm","memeId","text","createComments","multiline","rows","wrap","zeroMinWidth","Date","createdAt","getDate","getMonth","getYear","RandomMemePage","App","exact","path","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b19a9b8d.chunk.js","sourcesContent":["const initialState = {\r\n  id: localStorage.getItem(\"id\"),\r\n  user: {},\r\n  signinUp: false,\r\n  signinIn: false,\r\n  error: null,\r\n  token: localStorage.getItem(\"token\"),\r\n};\r\n\r\nexport default function application(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"application/signup/pending\":\r\n      return {\r\n        ...state,\r\n        signinUp: true,\r\n        error: null,\r\n      };\r\n    case \"application/signup/fullfilled\":\r\n      return {\r\n        ...state,\r\n        signinUp: false,\r\n      };\r\n    case \"application/signup/rejected\":\r\n      return {\r\n        ...state,\r\n        signinUp: false,\r\n        error: action.error,\r\n      };\r\n    case \"application/signin/pending\":\r\n      return {\r\n        ...state,\r\n        signinIn: true,\r\n        error: null,\r\n      };\r\n    case \"application/signin/fullfilled\":\r\n      return {\r\n        ...state,\r\n        signinIn: false,\r\n        token: action.payload.json.token,\r\n        id: action.payload.json.id,\r\n      };\r\n    case \"application/signin/rejected\":\r\n      return {\r\n        ...state,\r\n        signinIn: false,\r\n        error: action.error,\r\n      };\r\n    case \"application/logout/fullfilled\":\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        token: null,\r\n        id: null,\r\n      };\r\n    case \"application/getUser/fullfilled\":\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case \"application/uploadAvatar/fullfilled\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          avatar: action.payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const createUser = (email, password, name, avatar) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"application/signup/pending\" });\r\n\r\n    const response = await fetch(\"/users\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email, password, name, avatar }),\r\n      headers: { \"Content-type\": \"application/json\" },\r\n    });\r\n\r\n    const json = await response.json();\r\n\r\n    if (json.error) {\r\n      dispatch({ type: \"application/signup/rejected\", error: json.error });\r\n    } else {\r\n      dispatch({ type: \"application/signup/fullfilled\", payload: json });\r\n    }\r\n  };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"application/signin/pending\" });\r\n\r\n    const response = await fetch(\"/users/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    const json = await response.json();\r\n    console.log(json);\r\n    if (json.error) {\r\n      dispatch({ type: \"application/signin/rejected\", error: json.error });\r\n    } else {\r\n      dispatch({\r\n        type: \"application/signin/fullfilled\",\r\n        payload: { json },\r\n      });\r\n      localStorage.setItem(\"token\", json.token);\r\n      localStorage.setItem(\"id\", json.id);\r\n    }\r\n  };\r\n};\r\n\r\nexport const logOut = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"application/logout/fullfilled\" });\r\n    localStorage.clear();\r\n  };\r\n};\r\n\r\nexport const getUser = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"application/getUser/pending\" });\r\n\r\n    const response = await fetch(`/users/${id}`);\r\n\r\n    const json = await response.json();\r\n\r\n    if (json.error) {\r\n      dispatch({ type: \"application/getUser/rejected\", error: json.error });\r\n    } else {\r\n      dispatch({ type: \"application/getUser/fullfilled\", payload: json });\r\n    }\r\n  };\r\n};\r\n\r\nexport const uploadAvatar = (file) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      const response = await fetch(`/users/avatar`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n\r\n      dispatch({ type: \"application/uploadAvatar/fullfilled\", payload: json });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteAvatar = (file) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(`/users/avatar`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n\r\n      dispatch({ type: \"application/uploadAvatar/fullfilled\" });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\nimport { AppBar, Button, Box, makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"../../redux/features/application\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: \"60px\",\n    backgroundColor: \"#fff\",\n    padding: \"10px 30px \",\n  },\n  logoHeader: {\n    width: \"90px\",\n  },\n  profile: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    width: \"150px\",\n  },\n  profileLogo: {\n    fontSize: \"40px\",\n  },\n  profileLogoLink: {\n    color: \"black\",\n  },\n  escBtn: {\n    backgroundColor: \"black\",\n    \"&:hover\": {\n      backgroundColor: \"black\",\n    },\n    color: \"white\",\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const token = useSelector((state) => state.application.token);\n  const id = useSelector((state) => state.application.id);\n\n  const handleLogout = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <AppBar position={\"static\"}>\n      <Box className={classes.header}>\n        <Button component={Link} to={\"/\"}>\n          <img\n            className={classes.logoHeader}\n            src={\"https://www.iloveimg.com/img/iloveimg.svg\"}\n            alt={\"logo\"}\n          />\n        </Button>\n        {!token ? (\n          <Button variant=\"contained\" component={Link} to={\"/sign-in\"}>\n            Войти\n          </Button>\n        ) : (\n          <Box className={classes.profile}>\n            <Button\n              className={classes.escBtn}\n              variant=\"contained\"\n              color=\"success\"\n              onClick={handleLogout}\n              component={Link}\n              to={\"/\"}\n            >\n              Выйти\n            </Button>\n            <Link className={classes.profileLogoLink} to={`/account/${id}`}>\n              <AccountCircleIcon className={classes.profileLogo} />\n            </Link>\n          </Box>\n        )}\n      </Box>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { auth } from \"../../redux/features/application\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    padding: \"6px\",\r\n    width: \"395px\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction SigninPage() {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const signinIn = useSelector((state) => state.application.signinIn);\r\n  const error = useSelector((state) => state.application.error);\r\n  const token = useSelector((state) => state.application.token);\r\n\r\n  const HandleChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const HandleChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(auth(email, password));\r\n  };\r\n\r\n  if (token) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={(e) => handleSubmit(e)}\r\n          noValidate\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={email}\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={HandleChangeEmail}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={password}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={HandleChangePassword}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n            disabled={signinIn}\r\n            type=\"submit\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/sign-up\" variant=\"body2\">\r\n                Register\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Typography component=\"p\" variant=\"p\" className={classes.error}>\r\n          {error}\r\n        </Typography>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SigninPage;\r\n","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {createUser} from \"../../redux/features/application\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    padding: \"6px\",\r\n    width: \"395px\",\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n\r\nfunction SignupPage(props) {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [avatar, setAvatar] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const signinUp = useSelector((state) => state.application.signinUp)\r\n  const error = useSelector((state) => state.application.error)\r\n\r\n  const HandleChangeName = (e) => {\r\n    setName(e.target.value)\r\n  }\r\n\r\n  const HandleChangeAvatar = (e) => {\r\n    setAvatar(e.target.value)\r\n  }\r\n\r\n  const HandleChangeEmail = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  const HandleChangePassword = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(createUser(email,password,name,avatar))\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={name}\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                onChange={HandleChangeName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={avatar}\r\n                label=\"Avatar\"\r\n                name=\"avatar\"\r\n                autoComplete=\"avatar\"\r\n                onChange={HandleChangeAvatar}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={email}\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={HandleChangeEmail}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={password}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={HandleChangePassword}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n            disabled={signinUp}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/sign-in\" variant=\"body2\">\r\n                Login\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Typography component=\"p\" variant=\"p\" className={classes.error}>\r\n          {error}\r\n        </Typography>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignupPage;","const initialState = {\n  memes: [],\n  loading: false,\n};\n\nexport default function memes(state = initialState, action) {\n  switch (action.type) {\n    case \"memes/fetch/fulfilled\":\n      return {\n        ...state,\n        memes: action.payload,\n        loading: false,\n      };\n    case \"memes/fetch/pending\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"memes/getByAuthor/pending\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"memes/getByAuthor/fulfilled\":\n      return {\n        state,\n        memes: action.payload,\n        loading: false,\n      };\n    case \"setCurrentPage/fetch/fulfilled\":\n      return {\n        ...state,\n        currentPage: action.payload,\n      };\n    case \"memes/likeMeme/fulfilled\": {\n      return {\n        ...state,\n        memes: state.memes.map((item) => {\n          if (action.payload.memeId === item._id) {\n            return {\n              ...item,\n              likes: [...item.likes, localStorage.getItem(\"id\")],\n            };\n          }\n          return item;\n        }),\n      };\n    }\n    case \"memes/unlikeMeme/fulfilled\":\n      return {\n        ...state,\n        memes: state.memes.map((item) => {\n          if (action.payload.memeId === item._id) {\n            return {\n              ...item,\n              likes: item.likes.filter((e) => e !== localStorage.getItem(\"id\")),\n            };\n          }\n          return item;\n        }),\n      };\n    case \"memes/rnd/fulfilled\":\n      return {\n        ...state,\n        memes: [action.payload],\n      };\n    case \"memes/add-meme/pending\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"memes/add-meme/fulfilled\":\n      return {\n        ...state,\n        loading: false,\n        memes: [...state.memes, action.payload],\n      };\n    case \"memes/add-meme/rejected\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getMemes = (sort, currentPage) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: \"memes/fetch/pending\" });\n      let url = `/memes`;\n      if (sort) {\n        url = `/memes?sort=${sort}`;\n      }\n\n      const memes = await fetch(url);\n      const json = await memes.json();\n\n      await dispatch({ type: \"memes/fetch/fulfilled\", payload: json });\n    } catch (e) {\n      dispatch({ type: \"memes/fetch/rejected\", error: e.toString() });\n    }\n  };\n};\n\nexport const getMemesByAuthor = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: \"memes/getByAuthor/pending\" });\n      let url = `/memes/${id}`;\n\n      const memes = await fetch(url);\n      const json = await memes.json();\n\n      await dispatch({ type: \"memes/getByAuthor/fulfilled\", payload: json });\n    } catch (e) {\n      dispatch({ type: \"memes/getByAuthor/rejected\", error: e.toString() });\n    }\n  };\n};\nexport const likeMeme = (idMeme) => async (dispatch) => {\n  try {\n    const res = await fetch(`/memes/likes/${idMeme}`, {\n      method: \"POST\",\n      body: JSON.stringify({ idMeme }),\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const json = await res.json();\n\n    if (json.status) {\n      dispatch({ type: \"memes/likeMeme/fulfilled\", payload: json });\n    } else {\n      dispatch({ type: \"memes/unlikeMeme/fulfilled\", payload: json });\n    }\n  } catch (e) {\n    dispatch({ type: \"memes/likeMeme/rejected\", error: e.toString() });\n  }\n};\n\nexport const rndMeme = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: \"memes/rnd/pending\" });\n\n      const memes = await fetch(\"/memes/rnd\");\n      const json = await memes.json();\n\n      await dispatch({ type: \"memes/rnd/fulfilled\", payload: json });\n    } catch (e) {\n      dispatch({ type: \"memes/rnd/rejected\", error: e.toString() });\n    }\n  };\n};\n\nexport const addMeme = (file, template) => async (dispatch) => {\n  dispatch({ type: \"memes/add-meme/pending\" });\n\n  const response = await fetch(`/memes`, {\n    method: \"POST\",\n    body: JSON.stringify({ file, template }),\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const json = response.json();\n\n  if (json.error) {\n    dispatch({ type: \"memes/add-meme/rejected\", payload: json.error });\n  } else {\n    dispatch({ type: \"memes/add-meme/fulfilled\", payload: json });\n  }\n};\n","import * as React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\n\nconst Pending = () => {\n  return (\n      <Box style={{textAlign: 'center', marginTop: '150px'}}>\n        <CircularProgress />\n      </Box>\n  );\n};\n\nexport default Pending;","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardMedia,\n  Grid,\n} from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { likeMeme } from \"../../../../redux/features/memes\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Pending from \"../../preloader/Pending\";\nimport Alert from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { getMemes } from \"../../../../redux/features/memes\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport { saveAs } from \"file-saver\";\n\nconst useStyles = makeStyles({\n  pages: {\n    marginTop: 20,\n  },\n  page: {\n    border: \"solid\",\n    borderWidth: 1,\n    borderColor: \"lightgray\",\n    borderRadius: 40,\n    padding: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    marginRight: 10,\n    marginLeft: 10,\n    cursor: \"pointer\",\n  },\n  currentPage: {\n    border: \"solid\",\n    borderWidth: 2,\n    borderColor: \"gray\",\n    borderRadius: 40,\n    padding: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    marginRight: 10,\n    marginLeft: 10,\n    cursor: \"pointer\",\n  },\n  like: {\n    display: \"flex\",\n    marginLeft: \"auto !important\",\n    color: \"red\",\n  },\n  countLikes: {\n    color: \"#171717\",\n    fontSize: 16,\n  },\n  likedIcon: {\n    fontSize: \"24px !important\",\n  },\n  notLikedIcon: {\n    fontSize: \"24px !important\",\n    color: \"#171717\",\n  },\n  imageMem: {\n    position: 'relative',\n    width: 400,\n    height: 450,\n    margin: 'auto',\n    lineHeight: 100\n  },\n  imageCardMeme: {\n    position: 'absolute',\n    margin: 'auto',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0\n  }\n\n});\n\nconst Memes = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(getMemes());\n  }, []);\n\n  const userId = useSelector((state) => state.application.id);\n  const memes = useSelector((state) => state.memes.memes);\n  const loading = useSelector((state) => state.memes.loading);\n  const token = useSelector((state) => state.application.token);\n  const [search, setSearch] = useState(\"\");\n  const [alert, setAlert] = useState(false);\n\n  const handleLike = (idMeme) => {\n    if (!token) {\n      setAlert(true);\n    } else {\n      dispatch(likeMeme(idMeme));\n    }\n  };\n\n  const handleSave = (img) => {\n    saveAs(`http://localhost:4000/${img}`, \"meme.jpg\");\n  };\n\n  const data = memes.filter((item) => {\n    if (item.tags.length > 0) {\n      for (let i = 0; i < item.tags.length; i++) {\n        if (\n          item.tags[i] &&\n          item.tags[i].toLowerCase().includes(search.toLowerCase())\n        ) {\n          return item.tags[i].toLowerCase().includes(search.toLowerCase());\n        }\n      }\n    }\n  });\n  return (\n    <Box sx={{ flexGrow: 1 }} style={{ marginTop: 30 }}>\n      <div>\n        <TextField\n          id=\"outlined-search\"\n          label=\"Поиск по тегу\"\n          type=\"search\"\n          onChange={(e) => setSearch(e.target.value)}\n          value={search}\n          variant={\"outlined\"}\n        />\n\n      </div>\n      {loading ? (\n        <Pending />\n      ) : (\n        <>\n          <Grid container spacing={3}>\n            {data.map((item) => {\n              return (\n                <Grid item xs={4} >\n                  <Card sx={{ maxWidth: 345 }} className={classes.cardMeme} >\n                    <div className={classes.imageMem}>\n                      <CardMedia\n                        component=\"img\"\n                        alt={item.img}\n                        image={item.img}\n                        className={classes.imageCardMeme}\n                      />\n                    </div>\n                    <CardActions>\n                      <Button\n                        component={Link}\n                        to={`/memes/${item._id}`}\n                        variant=\"contained\"\n                        color={\"primary\"}\n                      >\n                        Подробнее\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        color={\"default\"}\n                        endIcon={<DownloadIcon />}\n                        onClick={() => handleSave(item.img)}\n                      >\n                        Скачать\n                      </Button>\n                      <Button\n                        className={classes.like}\n                        onClick={() => handleLike(item._id)}\n                        startIcon={\n                          item.likes.find((item) => userId === item) ? (\n                            <FavoriteIcon className={classes.likedIcon} />\n                          ) : (\n                            <FavoriteBorderIcon\n                              className={classes.notLikedIcon}\n                            />\n                          )\n                        }\n                      >\n                        <span className={classes.countLikes}>\n                          {item.likes.length}\n                        </span>\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              );\n            })}\n          </Grid>\n          {alert ? (\n            <Stack\n              sx={{\n                width: \"30%\",\n                position: \"fixed\",\n                top: \"20%\",\n                left: \"470px\",\n              }}\n              spacing={2}\n            >\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setAlert(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                severity=\"error\"\n              >\n                Для этого действия нужно авторизоваться\n              </Alert>\n            </Stack>\n          ) : (\n            <></>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default Memes;\n","import React, { useState, useEffect } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useDispatch} from \"react-redux\";\nimport { getMemes } from \"../../../../redux/features/memes\";\n\nconst Sort = () => {\n  const [sort, setSort] = useState(\"По умолчанию\");\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMemes(sort));\n  }, [sort]);\n  return (\n    <div>\n      <FormControl required sx={{ m: 1, minWidth: 120 }} style={{width: 220}}>\n        <InputLabel id=\"demo-simple-select-required-label\">\n          Сортировать\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-required-label\"\n          id=\"demo-simple-select-required\"\n          value={sort}\n          label=\"Age *\"\n          onChange={(e) => setSort(e.target.value)}\n        >\n          <MenuItem value=\"\">\n            <em>По умолчанию</em>\n          </MenuItem>\n          <MenuItem value=\"new\">По дате</MenuItem>\n          <MenuItem value=\"popular\">По популярности</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default Sort;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\n\nconst CreateMeme = () => {\n  return (\n    <Button\n      variant=\"contained\"\n      component={Link}\n      to=\"/create-meme\"\n      color={\"primary\"}\n      endIcon={<AddOutlinedIcon />}\n    >\n      Создать Мем\n    </Button>\n  );\n};\n\nexport default CreateMeme;\n","import React from \"react\";\nimport Sort from \"./Sort\";\nimport CreateMeme from \"./CreateMeme\";\nimport { Link } from \"react-router-dom\";\nimport CachedIcon from \"@mui/icons-material/Cached\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  buttonsBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: '30%',\n    height: 40\n  }\n})\n\nconst TopNavbar = ({ currentPage }) => {\n  const classes = useStyles()\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <Sort currentPage={currentPage} />\n      <Box className={classes.buttonsBox}>\n        <Button\n          color={\"secondary\"}\n          variant={\"contained\"}\n          component={Link}\n          to={\"/randomMeme\"}\n          endIcon={<CachedIcon />}\n        >\n          Рандомный мем\n        </Button>\n        <CreateMeme />\n      </Box>\n    </div>\n  );\n};\n\nexport default TopNavbar;\n","import React from \"react\";\nimport Memes from \"./memes/Memes\";\nimport TopNavbar from \"./navbar/TopNavbar\";\nimport { useSelector } from \"react-redux\";\n\nconst MainPage = () => {\n  const currentPage = useSelector((state) => state.memes.currentPage);\n\n  return (\n    <div style={{ padding: 30}}>\n      <TopNavbar currentPage={currentPage} />\n      <Memes currentPage={currentPage} />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport {\n  deleteAvatar,\n  getUser,\n  uploadAvatar,\n} from \"../../redux/features/application\";\nimport { getMemesByAuthor } from \"../../redux/features/memes\";\nimport {\n  Grid,\n  Typography,\n  Card,\n  CardMedia,\n  CardActions,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons//Edit\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport Pending from './preloader/Pending';\nimport { saveAs } from \"file-saver\";\n\nconst useStyles = makeStyles((theme) => ({\n  profile: {\n    paddingLeft: \"25px\",\n    textAlign: \"center\",\n  },\n  inp: {\n    display: \"none\",\n  },\n  avatar: {\n    marginTop: \"15px\",\n    borderRadius: \"50%\",\n    width: \"155px\",\n    height: \"155px\",\n  },\n  delBtn: {\n    backgroundColor: \"transparent\",\n    border: \"none\",\n  },\n  name: {\n    fontSize: \"20px\",\n    fontFamily: \"sans-serif\",\n    border: \"1px solid black\",\n    display: \"inline-block\",\n    padding: \"0px 7px\",\n    borderRadius: \"5px\",\n  },\n  title: {\n    fontSize: \"42px\",\n    letterSpacing: \"0\",\n    fontWeight: \"600\",\n    color: \"#383e45\",\n    marginBottom: \"8px\",\n    lineHeight: \"46px\",\n    maxWidth: \"800px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"10px\",\n    textAlign: \"center\",\n  },\n  btnCont: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nfunction Account() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const user = useSelector((state) => state.application.user);\n  const memes = useSelector((state) => state.memes.memes);\n  const loading = useSelector((state) => state.memes.loading);\n\n  const handleSave = (img) => {\n    saveAs(`http://localhost:4000/${img}`, \"meme.jpg\");\n  };\n\n  useEffect(() => {\n    dispatch(getUser(id));\n  }, []);\n\n  useEffect(() => {\n    dispatch(getMemesByAuthor(id));\n  }, []);\n\n  const handlerChange = (e) => {\n    const file = e.target.files[0];\n    dispatch(uploadAvatar(file));\n    e.target.value = \"\";\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid className={classes.profile} item xs=\"2\">\n          <Grid item>\n            {user.avatar ? (\n              <img\n                className={classes.avatar}\n                src={`http://localhost:4000/${user.avatar}`}\n                alt=\"avatar\"\n                loading=\"lazy\"\n              />\n            ) : (\n              <img\n                className={classes.avatar}\n                width={\"155px\"}\n                src={`https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg`}\n                alt=\"avatar\"\n                loading=\"lazy\"\n              />\n            )}\n          </Grid>\n          <Grid item>\n            <label for=\"inp\">\n              <EditIcon />\n            </label>\n            <input\n              id=\"inp\"\n              className={classes.inp}\n              accept=\"image/*\"\n              onChange={(e) => handlerChange(e)}\n              type=\"file\"\n              placeholder=\"загрузить аватар\"\n            ></input>\n            <button\n              className={classes.delBtn}\n              onClick={() => dispatch(deleteAvatar())}\n            >\n              <HighlightOffIcon />\n            </button>\n          </Grid>\n          <Grid item>\n            <Typography className={classes.name} component=\"h4\">\n              {user.name}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid item xs=\"9\">\n          <Typography component=\"h1\" variant=\"h4\" className={classes.title}>\n            Мои мемы\n          </Typography>\n          {loading ? <Pending/> :\n            <Grid container spacing={3}>\n              {memes.map((item) => {\n                return (\n                  <Grid item xs={3}>\n                    <Card sx={{ maxWidth: 345 }}>\n                      <CardMedia\n                        component=\"img\"\n                        alt=\"green iguana\"\n                        image={`http://localhost:4000/${item.img}`}\n                      />\n                      <CardActions className={classes.btnCont}>\n                        <Button variant=\"secondary\" color={\"secondary\"} onClick={() => handleSave(item.img)}>\n                          <GetAppIcon style={{ color: \"black\" }}/>\n                        </Button>\n                        <Button variant=\"secondary\" color={\"secondary\"}>\n                          <BookmarkIcon/>\n                        </Button>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          }\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Account;","const initialState = {\n  loading: false,\n  items: [],\n  error: null,\n  template: null,\n};\n\nexport default function templates(state = initialState, action) {\n  switch (action.type) {\n    case \"templates/fetch/pending\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"templates/fetch/fulfilled\":\n      return {\n        ...state,\n        loading: false,\n        items: action.payload,\n      };\n    case \"templates/fetch/rejected\":\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case \"templates/selectTemplate\":\n      return {\n        ...state,\n        loading: false,\n        template: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getTemplates = () => async (dispatch) => {\n  dispatch({ type: \"templates/fetch/pending\" });\n\n  const response = await fetch(\"/templates\");\n  const json = await response.json();\n\n  if (json.error) {\n    dispatch({ type: \"templates/fetch/rejected\", payload: json.error });\n  } else {\n    dispatch({ type: \"templates/fetch/fulfilled\", payload: json });\n  }\n};\n\nexport const selectTemplate = (template) => (dispatch) => {\n  dispatch({ type: \"templates/selectTemplate\", payload: template });\n};\n\n","import React, { useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  Grid,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTemplates, selectTemplate } from \"../../../redux/features/templates\";\n\nconst Templates = () => {\n  const dispatch = useDispatch();\n\n  const loading = useSelector((state) => state.templates.loading);\n  const templates = useSelector((state) => state.templates.items);\n\n\n  useEffect(() => {\n    dispatch(getTemplates());\n  }, []);\n\n  const handleSelectImage = (template) => {\n    dispatch(selectTemplate(template));\n  };\n\n  if (loading) return <CircularProgress />;\n\n  if (templates.length === 0)\n    return <Typography>Нет ни одного шаблона</Typography>;\n\n  return (\n    <Grid container spacing={4}>\n      {templates.map((item) => {\n        return (\n          <Grid item xs={12} sm={6} md={3} lg={4}>\n            <Paper>\n              <Card>\n                <CardMedia component=\"img\" image={item.img} alt=\"item\" />\n                <CardContent>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {item.tags.map((e) => \"#\" + e + \" \")}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    onClick={() => handleSelectImage(item)}\n                    color={\"primary\"}\n                    variant={\"contained\"}\n                    size=\"medium\"\n                  >\n                    Выбрать\n                  </Button>\n                </CardActions>\n              </Card>\n            </Paper>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default Templates;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { saveAs } from \"file-saver\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMeme } from \"../../../redux/features/memes\";\nimport { Box, Button, Grid } from \"@material-ui/core\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\n\nconst useStyles = makeStyles({\n  container: {\n    padding: 40,\n  },\n  templateWrapper: {\n    width: 400,\n    height: 400,\n    background: \"#e5e5e5\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  canvas: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"0 auto\",\n    width: \"80%\",\n    height: 500,\n    background: \"#e5e5e5\",\n    borderRadius: 4,\n    boxShadow: \"0 .5rem 1rem rgba(0, 0, 0, .15)\",\n  },\n  tools: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  toolsHeader: {\n    height: 100,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  toolsFooter: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  white: {\n    margin: \"0 5px\",\n    padding: 0,\n    width: 36,\n    height: 36,\n    background: \"white\",\n    border: \"none\",\n    boxShadow: \"0 0 2px rgba(0,0,0,.25)\",\n    borderRadius: 4,\n    cursor: \"pointer\",\n  },\n  black: {\n    margin: \"0 5px\",\n    padding: 0,\n    width: 36,\n    height: 36,\n    background: \"black\",\n    border: \"none\",\n    boxShadow: \"0 0 2px rgba(0,0,0,.25)\",\n    borderRadius: 4,\n    cursor: \"pointer\",\n  },\n  addTextBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n});\n\nconst Canvas = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const instance = useRef(null);\n  const template = useSelector((state) => state.templates.template);\n\n  useEffect(() => {\n    const ImageEditor = require(\"tui-image-editor\");\n\n    instance.current = new ImageEditor(document.querySelector(\"#canvas\"), {\n      cssMaxWidth: 700,\n      cssMaxHeight: 500,\n      selectionStyle: {\n        cornerSize: 20,\n        rotatingPointOffset: 70,\n      },\n    });\n\n    instance.current.startDrawingMode(\"TEXT\");\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      await instance.current\n        .loadImageFromURL(template?.img, \"lena\")\n        .then((result) => {\n          console.log(\"old : \" + result.oldWidth + \", \" + result.oldHeight);\n          console.log(\"new : \" + result.newWidth + \", \" + result.newHeight);\n        });\n    })();\n  }, [template]);\n\n  const handleAddText = async () => {\n    await instance.current.on(\"addText\", ({ originPosition }) => {\n      instance.current.addText(\"\", {\n        styles: {\n          fill: \"white\",\n          textAlign: \"center\",\n          fontStyle: \"bold\",\n          fontFamily: \"Impact\",\n          stroke: \"black\",\n        },\n        position: originPosition,\n      });\n    });\n  };\n\n  const handleDownload = () => {\n    saveAs(instance.current.toDataURL());\n  };\n\n  const handlePublication = () => {\n    dispatch(addMeme(instance.current.toDataURL(), template));\n  };\n\n  return (\n    <Grid container spacing={4} className={classes.container}>\n      <Grid item xs={8}>\n        <div id={\"canvas\"} className={classes.canvas} />\n      </Grid>\n      <Grid item xs={4} className={classes.tools}>\n        <Box className={classes.toolsHeader}>\n          <Box className={classes.addTextBox}>\n            <Button variant={\"contained\"} onClick={handleAddText}>\n              Добавить текст\n            </Button>\n          </Box>\n          <Button disabled variant={\"contained\"} endIcon={<FileUploadIcon />}>\n            Загрузить свою картинку\n          </Button>\n        </Box>\n        <Box className={classes.toolsFooter}>\n          <Button\n            endIcon={<DownloadIcon />}\n            color={\"secondary\"}\n            variant={\"contained\"}\n            onClick={handleDownload}\n          >\n            Скачать\n          </Button>\n          <Button\n            color={\"primary\"}\n            variant={\"contained\"}\n            onClick={handlePublication}\n          >\n            Опубликовать\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Canvas;\n","import React from \"react\";\nimport { Grid} from \"@material-ui/core\";\nimport Canvas from \"./Canvas\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: 40,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n});\n\nconst Create = () => {\n  const classes = useStyles();\n  return (\n    <Grid container className={classes.container}>\n      <Canvas />\n    </Grid>\n  );\n};\n\nexport default Create;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport Templates from \"./Templates\";\nimport Create from \"./Create\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  templatesBox: {\n    marginTop: 60,\n  },\n});\n\nconst CreateMemePage = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Box>\n        <Create />\n      </Box>\n      <Box className={classes.templatesBox}>\n        <Typography\n          align={\"center\"}\n          component={\"h1\"}\n          variant={\"h4\"}\n          gutterBottom\n        >\n          Шаблоны\n        </Typography>\n        <Box>\n          <Templates />\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default CreateMemePage;\n","const initialState = {\r\n  comments: [],\r\n  loading: false,\r\n};\r\n\r\nexport default function comments(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"comments/fetch/fulfilled\":\r\n      return {\r\n        ...state,\r\n        comments: action.payload,\r\n        loading: false\r\n      };\r\n    case \"comments/fetch/pending\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"comments/create/fulfilled\":\r\n      return {\r\n        ...state,\r\n        comments: [action.payload, ...state.comments],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getComments = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: \"comments/fetch/pending\"});\r\n      const data = await fetch(\"/comments\");\r\n      const json = await data.json();\r\n\r\n      await dispatch({ type: \"comments/fetch/fulfilled\", payload: json });\r\n    } catch (e) {\r\n      dispatch({ type: \"comments/fetch/rejected\", error: e.toString() });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createComments = (id, text) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await fetch(`/comments/memes/${id}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ text }),\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await data.json();\r\n\r\n      await dispatch({ type: \"comments/create/fulfilled\", payload: json });\r\n    } catch (e) {\r\n      dispatch({ type: \"comments/create/rejected\", error: e.toString() });\r\n    }\r\n  };\r\n};\r\n","import {\n  Grid,\n  Button,\n  Paper,\n  Avatar,\n  CardMedia,\n  Box,\n  TextField,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { getMemes } from \"../../redux/features/memes\";\nimport { getComments } from \"../../redux/features/comments\";\nimport { createComments } from \"../../redux/features/comments\";\nimport Pending from \"./preloader/Pending\";\nimport Alert from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nfunction SingleMemePage(props) {\n  const dispatch = useDispatch();\n\n  const memes = useSelector((state) => state.memes.memes);\n  const comments = useSelector((state) => state.comments.comments);\n  const loading = useSelector((state) => state.comments.loading);\n  const token = useSelector((state) => state.application.token);\n\n  const { id } = useParams();\n\n  const [comment, setComment] = useState(null);\n  const [alert, setAlert] = useState(false);\n\n  useEffect(() => {\n    dispatch(getMemes());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getComments());\n  }, [dispatch]);\n\n  const handleComment = (e) => {\n    e.preventDefault();\n    if (!token) {\n      setAlert(true);\n    } else {\n      dispatch(createComments(id, comment));\n    }\n  };\n\n  const find = memes.find((item) => id === item._id);\n\n  console.log(find, \"find\");\n\n  const findComm = comments.filter((item) => item.memeId === id);\n\n  if (find) {\n    return (\n      <>\n        {loading ? (\n          <Pending />\n        ) : (\n          <>\n            <Grid container>\n              <Grid item xs={5}>\n                <Box style={{ padding: \"20px 20px\" }}>\n                  <CardMedia component={\"img\"} src={`http://localhost:4000/${find.img}`} alt={find.img} />\n                </Box>\n              </Grid>\n            </Grid>\n            <div style={{ padding: 14 }} className=\"App\">\n              <h1\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Comments\n              </h1>\n              <Grid container>\n                <Grid item xs={12}>\n                  <Box\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"end\",\n                    }}\n                    component=\"form\"\n                    noValidate\n                    autoComplete=\"off\"\n                    onSubmit={handleComment}\n                  >\n                    <TextField\n                      id=\"outlined-multiline-static\"\n                      label=\"Text\"\n                      multiline\n                      rows={4}\n                      variant=\"outlined\"\n                      style={{ width: \"700px\" }}\n                      value={comment}\n                      onChange={(e) => setComment(e.target.value)}\n                    />\n                    <Button\n                      type=\"submit\"\n                      style={{\n                        marginLeft: \"10px\",\n                      }}\n                      variant=\"outlined\"\n                    >\n                      Отправить\n                    </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n              {alert ? (\n                <Stack\n                  sx={{\n                    width: \"30%\",\n                    position: \"fixed\",\n                    top: \"20%\",\n                    left: \"470px\",\n                  }}\n                  spacing={2}\n                >\n                  <Alert\n                    action={\n                      <IconButton\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        size=\"small\"\n                        onClick={() => {\n                          setAlert(false);\n                        }}\n                      >\n                        <CloseIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    }\n                    severity=\"error\"\n                  >\n                    Войдите на аккаунт\n                  </Alert>\n                </Stack>\n              ) : (\n                <></>\n              )}\n              {findComm.map((item) => {\n                return (\n                  <Paper style={{ padding: \"40px 20px\", marginTop: 25 }}>\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                      <Grid item>\n                        <Avatar\n                          alt=\"Remy Sharp\"\n                          src={`http://localhost:4000/${item.userId.avatar}`}\n                        />\n                      </Grid>\n                      <Grid justifyContent=\"left\" item xs zeroMinWidth>\n                        <h4 style={{ margin: 0, textAlign: \"left\" }}>\n                          {item.userId.name}\n                        </h4>\n                        <p style={{ textAlign: \"left\" }}>{item.text}</p>\n                        <p style={{ textAlign: \"left\", color: \"gray\" }}>\n                          {new Date(item.createdAt).getDate()}.\n                          {new Date(item.createdAt).getMonth()}.\n                          {new Date(item.createdAt).getYear() - 100}\n                        </p>\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n  return <></>;\n}\n\nexport default SingleMemePage;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  CardMedia,\r\n  Grid,\r\n  Card,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { rndMeme } from \"../../redux/features/memes\";\r\n\r\nfunction RandomMemePage(props) {\r\n  const dispatch = useDispatch();\r\n  const memes = useSelector((state) => state.memes.memes);\r\n\r\n  useEffect(() => {\r\n    dispatch(rndMeme());\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={3}>\r\n          <Card sx={{ maxWidth: 345 }}>\r\n            <CardMedia component=\"img\" alt=\"green iguana\" image={memes[0].img} />\r\n            <CardActions/>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <Button onClick={() => dispatch(rndMeme())} variant=\"contained\">\r\n        Еще\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RandomMemePage;\r\n","import React from \"react\";\n\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Header from \"./Header/Header\";\nimport SignInPage from \"./pages/SigninPage\";\nimport SignUpPage from \"./pages/SignupPage\";\nimport MainPage from \"./pages/main/MainPage\";\nimport Account from \"./pages/Account\";\nimport CreateMemePage from \"./pages/create-meme/CreateMemePage\";\nimport SingleMemePage from \"./pages/SingleMemePage\";\nimport RandomMemePage from \"./pages/RandomMemePage\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n        <Route path=\"/create-meme\">\n          <CreateMemePage />\n        </Route>\n        <Route path=\"/sign-in\">\n          <SignInPage />\n        </Route>\n        <Route path=\"/sign-up\">\n          <SignUpPage />\n        </Route>\n        <Route path=\"/account/:id\">\n          <Account />\n        </Route>\n        <Route path=\"/memes/:id\">\n          <SingleMemePage />\n        </Route>\n        <Route path=\"/RandomMeme\">\n          <RandomMemePage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport memes from \"./features/memes\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport templates from \"./features/templates\";\nimport application from \"./features/application\";\nimport comments from \"./features/comments\";\n\nexport const store = createStore(\n  combineReducers({ memes, application, templates, comments }),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/configureStore'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}